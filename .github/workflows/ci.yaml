name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  Linux:
    strategy:
      matrix:
        runs-on: ['ubuntu-24.04-arm', 'ubuntu-24.04']
        platform: ['linux/arm64', 'linux/i386', 'linux/amd64', 'linux/s390x']
        image: ['debian:trixie', 'alpine:3.22']
        exclude:
          - runs-on: 'ubuntu-24.04'
            platform: 'linux/arm64'
          - runs-on: 'ubuntu-24.04-arm'
            platform: 'linux/i386'
          - runs-on: 'ubuntu-24.04-arm'
            platform: 'linux/amd64'
          - runs-on: 'ubuntu-24.04-arm'
            platform: 'linux/s390x'
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 1
      - name: Setup QEMU
        if: ${{ (matrix.runs-on == 'ubuntu-24.04' && matrix.platform != 'linux/amd64') && '1' || '0' }}
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
        with:
          platforms: "s390x"
      - name: Build container
        run: |
          docker build \
            --tag "ci" \
            --build-arg PLATFORM="${{ matrix.platform }}" \
            --build-arg ENABLE_VALGRIND="${{ matrix.platform == 'linux/amd64' && '1' || '0' }}" \
            --build-arg ENABLE_CLANG="${{ (matrix.platform == 'linux/amd64' || matrix.platform == 'linux/arm64') && '1' || '0' }}" \
            --target "base" \
            .
      - name: Build and test on container
        run: |
          docker run --rm --platform=${{ matrix.platform }} -i "ci"
  macOS:
    strategy:
      matrix:
        runs-on: ['macos-13', 'macos-14', 'macos-15']
        type: ['Debug', 'Release']
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 1
      - name: Build and test
        run: |
          cmake -B "build" -DCMAKE_BUILD_TYPE="${{ matrix.type }}" -DPINO_USE_TESTS=ON .
          cmake --build "build" --config "${{ matrix.type }}" --parallel
          ctest --build-config "${{ matrix.type }}" --test-dir "build" --output-on-failure
  Windows:
    strategy:
      matrix:
        architecture: ['x64', 'Win32']
        type: ['Debug', 'Release']
        vs_version:
          - { runs-on: 'windows-2022', generator: 'Visual Studio 17 2022' }
          - { runs-on: 'windows-2025', generator: 'Visual Studio 17 2022' }
    runs-on: ${{ matrix.vs_version.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 1
      - name: Build and test
        shell: cmd
        run: |
          cmake -B "build" -DCMAKE_BUILD_TYPE="${{ matrix.type }}" -DPINO_USE_TESTS=ON .
          cmake --build "build" --config "${{ matrix.type }}" --parallel
          ctest --build-config "${{ matrix.type }}" --test-dir "build" --output-on-failure
